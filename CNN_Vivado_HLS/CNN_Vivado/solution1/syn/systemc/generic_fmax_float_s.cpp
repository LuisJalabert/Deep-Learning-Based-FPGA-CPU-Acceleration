// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "generic_fmax_float_s.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic generic_fmax_float_s::ap_const_logic_1 = sc_dt::Log_1;
const bool generic_fmax_float_s::ap_const_boolean_1 = true;
const sc_lv<32> generic_fmax_float_s::ap_const_lv32_1F = "11111";
const sc_lv<32> generic_fmax_float_s::ap_const_lv32_17 = "10111";
const sc_lv<32> generic_fmax_float_s::ap_const_lv32_1E = "11110";
const sc_lv<8> generic_fmax_float_s::ap_const_lv8_0 = "00000000";
const sc_lv<23> generic_fmax_float_s::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<8> generic_fmax_float_s::ap_const_lv8_FF = "11111111";
const sc_lv<32> generic_fmax_float_s::ap_const_lv32_16 = "10110";
const sc_lv<1> generic_fmax_float_s::ap_const_lv1_1 = "1";
const sc_lv<1> generic_fmax_float_s::ap_const_lv1_0 = "0";
const sc_logic generic_fmax_float_s::ap_const_logic_0 = sc_dt::Log_0;

generic_fmax_float_s::generic_fmax_float_s(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_ready);

    SC_METHOD(thread_ap_return);
    sensitive << ( y );
    sensitive << ( or_cond2_fu_130_p2 );
    sensitive << ( res_5_fu_302_p3 );

    SC_METHOD(thread_or_cond2_fu_130_p2);
    sensitive << ( tmp2_fu_124_p2 );
    sensitive << ( tmp1_fu_118_p2 );

    SC_METHOD(thread_p_Result_6_fu_72_p3);
    sensitive << ( t_V_2_fu_68_p1 );

    SC_METHOD(thread_p_Result_7_fu_172_p4);
    sensitive << ( tmp_V_1_fu_64_p1 );

    SC_METHOD(thread_p_Result_8_fu_182_p4);
    sensitive << ( p_Result_s_fu_46_p3 );
    sensitive << ( p_Result_7_fu_172_p4 );

    SC_METHOD(thread_p_Result_s_fu_46_p3);
    sensitive << ( t_V_1_fu_42_p1 );

    SC_METHOD(thread_p_s_fu_208_p3);
    sensitive << ( p_Result_s_fu_46_p3 );
    sensitive << ( ymaggreater_fu_196_p2 );
    sensitive << ( ymaggreater_1_fu_202_p2 );

    SC_METHOD(thread_res_1_fu_224_p3);
    sensitive << ( x );
    sensitive << ( y );
    sensitive << ( ymaggreater2_fu_216_p3 );

    SC_METHOD(thread_res_2_fu_250_p3);
    sensitive << ( sel_tmp2_fu_244_p2 );
    sensitive << ( res_fu_192_p1 );
    sensitive << ( res_1_fu_224_p3 );

    SC_METHOD(thread_res_4_fu_276_p3);
    sensitive << ( y );
    sensitive << ( sel_tmp7_fu_270_p2 );
    sensitive << ( res_2_fu_250_p3 );

    SC_METHOD(thread_res_5_fu_302_p3);
    sensitive << ( x );
    sensitive << ( sel_tmp4_fu_296_p2 );
    sensitive << ( res_4_fu_276_p3 );

    SC_METHOD(thread_res_fu_192_p1);
    sensitive << ( p_Result_8_fu_182_p4 );

    SC_METHOD(thread_sel_tmp11_demorgan_fu_284_p2);
    sensitive << ( or_cond2_fu_130_p2 );
    sensitive << ( tmp_7_demorgan_fu_148_p2 );

    SC_METHOD(thread_sel_tmp1_fu_238_p2);
    sensitive << ( tmp_7_demorgan_fu_148_p2 );
    sensitive << ( sel_tmp_fu_232_p2 );

    SC_METHOD(thread_sel_tmp2_fu_244_p2);
    sensitive << ( sel_tmp1_fu_238_p2 );
    sensitive << ( tmp_9_demorgan_fu_166_p2 );

    SC_METHOD(thread_sel_tmp3_fu_290_p2);
    sensitive << ( sel_tmp11_demorgan_fu_284_p2 );

    SC_METHOD(thread_sel_tmp4_fu_296_p2);
    sensitive << ( tmp_9_demorgan_fu_166_p2 );
    sensitive << ( sel_tmp3_fu_290_p2 );

    SC_METHOD(thread_sel_tmp6_demorgan_fu_258_p2);
    sensitive << ( tmp_i1_fu_154_p2 );
    sensitive << ( tmp_1_i1_fu_160_p2 );

    SC_METHOD(thread_sel_tmp6_fu_264_p2);
    sensitive << ( sel_tmp6_demorgan_fu_258_p2 );

    SC_METHOD(thread_sel_tmp7_fu_270_p2);
    sensitive << ( sel_tmp1_fu_238_p2 );
    sensitive << ( sel_tmp6_fu_264_p2 );

    SC_METHOD(thread_sel_tmp_fu_232_p2);
    sensitive << ( or_cond2_fu_130_p2 );

    SC_METHOD(thread_t_V_1_fu_42_p1);
    sensitive << ( x );

    SC_METHOD(thread_t_V_2_fu_68_p1);
    sensitive << ( y );

    SC_METHOD(thread_tmp1_fu_118_p2);
    sensitive << ( tmp_3_fu_100_p2 );
    sensitive << ( tmp_4_fu_106_p2 );

    SC_METHOD(thread_tmp2_fu_124_p2);
    sensitive << ( tmp_fu_94_p2 );
    sensitive << ( tmp_5_fu_112_p2 );

    SC_METHOD(thread_tmp_1_i1_fu_160_p2);
    sensitive << ( tmp_V_3_fu_90_p1 );
    sensitive << ( or_cond2_fu_130_p2 );

    SC_METHOD(thread_tmp_1_i_fu_142_p2);
    sensitive << ( tmp_V_1_fu_64_p1 );
    sensitive << ( or_cond2_fu_130_p2 );

    SC_METHOD(thread_tmp_3_fu_100_p2);
    sensitive << ( tmp_V_1_fu_64_p1 );

    SC_METHOD(thread_tmp_4_fu_106_p2);
    sensitive << ( tmp_V_2_fu_80_p4 );

    SC_METHOD(thread_tmp_5_fu_112_p2);
    sensitive << ( tmp_V_3_fu_90_p1 );

    SC_METHOD(thread_tmp_7_demorgan_fu_148_p2);
    sensitive << ( tmp_i_fu_136_p2 );
    sensitive << ( tmp_1_i_fu_142_p2 );

    SC_METHOD(thread_tmp_9_demorgan_fu_166_p2);
    sensitive << ( tmp_i1_fu_154_p2 );
    sensitive << ( tmp_1_i1_fu_160_p2 );

    SC_METHOD(thread_tmp_V_1_fu_64_p1);
    sensitive << ( t_V_1_fu_42_p1 );

    SC_METHOD(thread_tmp_V_2_fu_80_p4);
    sensitive << ( t_V_2_fu_68_p1 );

    SC_METHOD(thread_tmp_V_3_fu_90_p1);
    sensitive << ( t_V_2_fu_68_p1 );

    SC_METHOD(thread_tmp_V_fu_54_p4);
    sensitive << ( t_V_1_fu_42_p1 );

    SC_METHOD(thread_tmp_fu_94_p2);
    sensitive << ( tmp_V_fu_54_p4 );

    SC_METHOD(thread_tmp_i1_fu_154_p2);
    sensitive << ( tmp_V_2_fu_80_p4 );
    sensitive << ( or_cond2_fu_130_p2 );

    SC_METHOD(thread_tmp_i_fu_136_p2);
    sensitive << ( tmp_V_fu_54_p4 );
    sensitive << ( or_cond2_fu_130_p2 );

    SC_METHOD(thread_ymaggreater2_fu_216_p3);
    sensitive << ( ymaggreater_fu_196_p2 );
    sensitive << ( p_Result_6_fu_72_p3 );
    sensitive << ( p_s_fu_208_p3 );

    SC_METHOD(thread_ymaggreater_1_fu_202_p2);
    sensitive << ( ymaggreater_fu_196_p2 );

    SC_METHOD(thread_ymaggreater_fu_196_p2);
    sensitive << ( t_V_1_fu_42_p1 );
    sensitive << ( t_V_2_fu_68_p1 );
    sensitive << ( or_cond2_fu_130_p2 );
    sensitive << ( sel_tmp2_fu_244_p2 );
    sensitive << ( sel_tmp7_fu_270_p2 );
    sensitive << ( sel_tmp4_fu_296_p2 );

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "generic_fmax_float_s_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, y, "(port)y");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, t_V_1_fu_42_p1, "t_V_1_fu_42_p1");
    sc_trace(mVcdFile, t_V_2_fu_68_p1, "t_V_2_fu_68_p1");
    sc_trace(mVcdFile, tmp_V_fu_54_p4, "tmp_V_fu_54_p4");
    sc_trace(mVcdFile, tmp_V_1_fu_64_p1, "tmp_V_1_fu_64_p1");
    sc_trace(mVcdFile, tmp_V_2_fu_80_p4, "tmp_V_2_fu_80_p4");
    sc_trace(mVcdFile, tmp_V_3_fu_90_p1, "tmp_V_3_fu_90_p1");
    sc_trace(mVcdFile, tmp_3_fu_100_p2, "tmp_3_fu_100_p2");
    sc_trace(mVcdFile, tmp_4_fu_106_p2, "tmp_4_fu_106_p2");
    sc_trace(mVcdFile, tmp_fu_94_p2, "tmp_fu_94_p2");
    sc_trace(mVcdFile, tmp_5_fu_112_p2, "tmp_5_fu_112_p2");
    sc_trace(mVcdFile, tmp2_fu_124_p2, "tmp2_fu_124_p2");
    sc_trace(mVcdFile, tmp1_fu_118_p2, "tmp1_fu_118_p2");
    sc_trace(mVcdFile, tmp_i_fu_136_p2, "tmp_i_fu_136_p2");
    sc_trace(mVcdFile, tmp_1_i_fu_142_p2, "tmp_1_i_fu_142_p2");
    sc_trace(mVcdFile, tmp_i1_fu_154_p2, "tmp_i1_fu_154_p2");
    sc_trace(mVcdFile, tmp_1_i1_fu_160_p2, "tmp_1_i1_fu_160_p2");
    sc_trace(mVcdFile, p_Result_s_fu_46_p3, "p_Result_s_fu_46_p3");
    sc_trace(mVcdFile, p_Result_7_fu_172_p4, "p_Result_7_fu_172_p4");
    sc_trace(mVcdFile, p_Result_8_fu_182_p4, "p_Result_8_fu_182_p4");
    sc_trace(mVcdFile, ymaggreater_fu_196_p2, "ymaggreater_fu_196_p2");
    sc_trace(mVcdFile, ymaggreater_1_fu_202_p2, "ymaggreater_1_fu_202_p2");
    sc_trace(mVcdFile, p_Result_6_fu_72_p3, "p_Result_6_fu_72_p3");
    sc_trace(mVcdFile, p_s_fu_208_p3, "p_s_fu_208_p3");
    sc_trace(mVcdFile, ymaggreater2_fu_216_p3, "ymaggreater2_fu_216_p3");
    sc_trace(mVcdFile, or_cond2_fu_130_p2, "or_cond2_fu_130_p2");
    sc_trace(mVcdFile, tmp_7_demorgan_fu_148_p2, "tmp_7_demorgan_fu_148_p2");
    sc_trace(mVcdFile, sel_tmp_fu_232_p2, "sel_tmp_fu_232_p2");
    sc_trace(mVcdFile, sel_tmp1_fu_238_p2, "sel_tmp1_fu_238_p2");
    sc_trace(mVcdFile, tmp_9_demorgan_fu_166_p2, "tmp_9_demorgan_fu_166_p2");
    sc_trace(mVcdFile, sel_tmp2_fu_244_p2, "sel_tmp2_fu_244_p2");
    sc_trace(mVcdFile, res_fu_192_p1, "res_fu_192_p1");
    sc_trace(mVcdFile, res_1_fu_224_p3, "res_1_fu_224_p3");
    sc_trace(mVcdFile, sel_tmp6_demorgan_fu_258_p2, "sel_tmp6_demorgan_fu_258_p2");
    sc_trace(mVcdFile, sel_tmp6_fu_264_p2, "sel_tmp6_fu_264_p2");
    sc_trace(mVcdFile, sel_tmp7_fu_270_p2, "sel_tmp7_fu_270_p2");
    sc_trace(mVcdFile, res_2_fu_250_p3, "res_2_fu_250_p3");
    sc_trace(mVcdFile, sel_tmp11_demorgan_fu_284_p2, "sel_tmp11_demorgan_fu_284_p2");
    sc_trace(mVcdFile, sel_tmp3_fu_290_p2, "sel_tmp3_fu_290_p2");
    sc_trace(mVcdFile, sel_tmp4_fu_296_p2, "sel_tmp4_fu_296_p2");
    sc_trace(mVcdFile, res_4_fu_276_p3, "res_4_fu_276_p3");
    sc_trace(mVcdFile, res_5_fu_302_p3, "res_5_fu_302_p3");
#endif

    }
}

generic_fmax_float_s::~generic_fmax_float_s() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void generic_fmax_float_s::thread_ap_ready() {
    ap_ready = ap_const_logic_1;
}

void generic_fmax_float_s::thread_ap_return() {
    ap_return = (!or_cond2_fu_130_p2.read()[0].is_01())? sc_lv<32>(): ((or_cond2_fu_130_p2.read()[0].to_bool())? y.read(): res_5_fu_302_p3.read());
}

void generic_fmax_float_s::thread_or_cond2_fu_130_p2() {
    or_cond2_fu_130_p2 = (tmp2_fu_124_p2.read() & tmp1_fu_118_p2.read());
}

void generic_fmax_float_s::thread_p_Result_6_fu_72_p3() {
    p_Result_6_fu_72_p3 = t_V_2_fu_68_p1.read().range(31, 31);
}

void generic_fmax_float_s::thread_p_Result_7_fu_172_p4() {
    p_Result_7_fu_172_p4 = esl_bitset<23,23,32,1>(tmp_V_1_fu_64_p1.read(), ap_const_lv32_16, ap_const_lv1_1);
}

void generic_fmax_float_s::thread_p_Result_8_fu_182_p4() {
    p_Result_8_fu_182_p4 = esl_concat<9,23>(esl_concat<1,8>(p_Result_s_fu_46_p3.read(), ap_const_lv8_FF), p_Result_7_fu_172_p4.read());
}

void generic_fmax_float_s::thread_p_Result_s_fu_46_p3() {
    p_Result_s_fu_46_p3 = t_V_1_fu_42_p1.read().range(31, 31);
}

void generic_fmax_float_s::thread_p_s_fu_208_p3() {
    p_s_fu_208_p3 = (!p_Result_s_fu_46_p3.read()[0].is_01())? sc_lv<1>(): ((p_Result_s_fu_46_p3.read()[0].to_bool())? ymaggreater_1_fu_202_p2.read(): ymaggreater_fu_196_p2.read());
}

void generic_fmax_float_s::thread_res_1_fu_224_p3() {
    res_1_fu_224_p3 = (!ymaggreater2_fu_216_p3.read()[0].is_01())? sc_lv<32>(): ((ymaggreater2_fu_216_p3.read()[0].to_bool())? y.read(): x.read());
}

void generic_fmax_float_s::thread_res_2_fu_250_p3() {
    res_2_fu_250_p3 = (!sel_tmp2_fu_244_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp2_fu_244_p2.read()[0].to_bool())? res_fu_192_p1.read(): res_1_fu_224_p3.read());
}

void generic_fmax_float_s::thread_res_4_fu_276_p3() {
    res_4_fu_276_p3 = (!sel_tmp7_fu_270_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp7_fu_270_p2.read()[0].to_bool())? y.read(): res_2_fu_250_p3.read());
}

void generic_fmax_float_s::thread_res_5_fu_302_p3() {
    res_5_fu_302_p3 = (!sel_tmp4_fu_296_p2.read()[0].is_01())? sc_lv<32>(): ((sel_tmp4_fu_296_p2.read()[0].to_bool())? x.read(): res_4_fu_276_p3.read());
}

void generic_fmax_float_s::thread_res_fu_192_p1() {
    res_fu_192_p1 = p_Result_8_fu_182_p4.read();
}

void generic_fmax_float_s::thread_sel_tmp11_demorgan_fu_284_p2() {
    sel_tmp11_demorgan_fu_284_p2 = (or_cond2_fu_130_p2.read() | tmp_7_demorgan_fu_148_p2.read());
}

void generic_fmax_float_s::thread_sel_tmp1_fu_238_p2() {
    sel_tmp1_fu_238_p2 = (tmp_7_demorgan_fu_148_p2.read() & sel_tmp_fu_232_p2.read());
}

void generic_fmax_float_s::thread_sel_tmp2_fu_244_p2() {
    sel_tmp2_fu_244_p2 = (sel_tmp1_fu_238_p2.read() & tmp_9_demorgan_fu_166_p2.read());
}

void generic_fmax_float_s::thread_sel_tmp3_fu_290_p2() {
    sel_tmp3_fu_290_p2 = (sel_tmp11_demorgan_fu_284_p2.read() ^ ap_const_lv1_1);
}

void generic_fmax_float_s::thread_sel_tmp4_fu_296_p2() {
    sel_tmp4_fu_296_p2 = (tmp_9_demorgan_fu_166_p2.read() & sel_tmp3_fu_290_p2.read());
}

void generic_fmax_float_s::thread_sel_tmp6_demorgan_fu_258_p2() {
    sel_tmp6_demorgan_fu_258_p2 = (tmp_i1_fu_154_p2.read() & tmp_1_i1_fu_160_p2.read());
}

void generic_fmax_float_s::thread_sel_tmp6_fu_264_p2() {
    sel_tmp6_fu_264_p2 = (sel_tmp6_demorgan_fu_258_p2.read() ^ ap_const_lv1_1);
}

void generic_fmax_float_s::thread_sel_tmp7_fu_270_p2() {
    sel_tmp7_fu_270_p2 = (sel_tmp1_fu_238_p2.read() & sel_tmp6_fu_264_p2.read());
}

void generic_fmax_float_s::thread_sel_tmp_fu_232_p2() {
    sel_tmp_fu_232_p2 = (or_cond2_fu_130_p2.read() ^ ap_const_lv1_1);
}

void generic_fmax_float_s::thread_t_V_1_fu_42_p1() {
    t_V_1_fu_42_p1 = x.read();
}

void generic_fmax_float_s::thread_t_V_2_fu_68_p1() {
    t_V_2_fu_68_p1 = y.read();
}

void generic_fmax_float_s::thread_tmp1_fu_118_p2() {
    tmp1_fu_118_p2 = (tmp_3_fu_100_p2.read() & tmp_4_fu_106_p2.read());
}

void generic_fmax_float_s::thread_tmp2_fu_124_p2() {
    tmp2_fu_124_p2 = (tmp_fu_94_p2.read() & tmp_5_fu_112_p2.read());
}

void generic_fmax_float_s::thread_tmp_1_i1_fu_160_p2() {
    tmp_1_i1_fu_160_p2 = (!tmp_V_3_fu_90_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_3_fu_90_p1.read() != ap_const_lv23_0);
}

void generic_fmax_float_s::thread_tmp_1_i_fu_142_p2() {
    tmp_1_i_fu_142_p2 = (!tmp_V_1_fu_64_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_1_fu_64_p1.read() != ap_const_lv23_0);
}

void generic_fmax_float_s::thread_tmp_3_fu_100_p2() {
    tmp_3_fu_100_p2 = (!tmp_V_1_fu_64_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_1_fu_64_p1.read() == ap_const_lv23_0);
}

void generic_fmax_float_s::thread_tmp_4_fu_106_p2() {
    tmp_4_fu_106_p2 = (!tmp_V_2_fu_80_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_2_fu_80_p4.read() == ap_const_lv8_0);
}

void generic_fmax_float_s::thread_tmp_5_fu_112_p2() {
    tmp_5_fu_112_p2 = (!tmp_V_3_fu_90_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_3_fu_90_p1.read() == ap_const_lv23_0);
}

void generic_fmax_float_s::thread_tmp_7_demorgan_fu_148_p2() {
    tmp_7_demorgan_fu_148_p2 = (tmp_i_fu_136_p2.read() & tmp_1_i_fu_142_p2.read());
}

void generic_fmax_float_s::thread_tmp_9_demorgan_fu_166_p2() {
    tmp_9_demorgan_fu_166_p2 = (tmp_i1_fu_154_p2.read() & tmp_1_i1_fu_160_p2.read());
}

void generic_fmax_float_s::thread_tmp_V_1_fu_64_p1() {
    tmp_V_1_fu_64_p1 = t_V_1_fu_42_p1.read().range(23-1, 0);
}

void generic_fmax_float_s::thread_tmp_V_2_fu_80_p4() {
    tmp_V_2_fu_80_p4 = t_V_2_fu_68_p1.read().range(30, 23);
}

void generic_fmax_float_s::thread_tmp_V_3_fu_90_p1() {
    tmp_V_3_fu_90_p1 = t_V_2_fu_68_p1.read().range(23-1, 0);
}

void generic_fmax_float_s::thread_tmp_V_fu_54_p4() {
    tmp_V_fu_54_p4 = t_V_1_fu_42_p1.read().range(30, 23);
}

void generic_fmax_float_s::thread_tmp_fu_94_p2() {
    tmp_fu_94_p2 = (!tmp_V_fu_54_p4.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_fu_54_p4.read() == ap_const_lv8_0);
}

void generic_fmax_float_s::thread_tmp_i1_fu_154_p2() {
    tmp_i1_fu_154_p2 = (!tmp_V_2_fu_80_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_2_fu_80_p4.read() == ap_const_lv8_FF);
}

void generic_fmax_float_s::thread_tmp_i_fu_136_p2() {
    tmp_i_fu_136_p2 = (!tmp_V_fu_54_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_V_fu_54_p4.read() == ap_const_lv8_FF);
}

void generic_fmax_float_s::thread_ymaggreater2_fu_216_p3() {
    ymaggreater2_fu_216_p3 = (!p_Result_6_fu_72_p3.read()[0].is_01())? sc_lv<1>(): ((p_Result_6_fu_72_p3.read()[0].to_bool())? p_s_fu_208_p3.read(): ymaggreater_fu_196_p2.read());
}

void generic_fmax_float_s::thread_ymaggreater_1_fu_202_p2() {
    ymaggreater_1_fu_202_p2 = (ymaggreater_fu_196_p2.read() ^ ap_const_lv1_1);
}

void generic_fmax_float_s::thread_ymaggreater_fu_196_p2() {
    ymaggreater_fu_196_p2 = (!t_V_1_fu_42_p1.read().is_01() || !t_V_2_fu_68_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(t_V_1_fu_42_p1.read()) < sc_bigint<32>(t_V_2_fu_68_p1.read()));
}

}

