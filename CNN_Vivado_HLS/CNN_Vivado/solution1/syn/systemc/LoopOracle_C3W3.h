// ==============================================================
// File generated on Thu Apr 04 23:06:48 CEST 2019
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2018.3 (64-bit)
// SW Build 2405991 on Thu Dec  6 23:36:41 MST 2018
// IP Build 2404404 on Fri Dec  7 01:43:56 MST 2018
// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __LoopOracle_C3W3_H__
#define __LoopOracle_C3W3_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct LoopOracle_C3W3_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 128;
  static const unsigned AddressWidth = 7;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(LoopOracle_C3W3_ram) {
        ram[0] = "0b00111101110011010011010110101000";
        ram[1] = "0b00111110010100000111110010000101";
        ram[2] = "0b10111110000011000111111000101000";
        ram[3] = "0b00111110000111000010100011110110";
        ram[4] = "0b10111110100001111010000011111001";
        ram[5] = "0b10111011010110000100010011010000";
        ram[6] = "0b10111101000111101000001111100100";
        ram[7] = "0b10111110000111111000101000001001";
        ram[8] = "0b00111101001001001010100011000001";
        ram[9] = "0b00111110001110100000111110010001";
        ram[10] = "0b00111110011100101111111011000101";
        ram[11] = "0b00111110000001000011001011001010";
        ram[12] = "0b10111101111011111101001000100000";
        ram[13] = "0b10111101011100110100110101101010";
        ram[14] = "0b10111101100000010110111100000000";
        ram[15] = "0b00111101100111000000111010111111";
        ram[16] = "0b10111111000100011100010000110011";
        ram[17] = "0b10111110100000111010111110111000";
        ram[18] = "0b10111101100000101101111000000001";
        ram[19] = "0b10111110000100101111000110101010";
        ram[20] = "0b00111111001000000100100000010111";
        ram[21] = "0b10111110001101111000000000110100";
        ram[22] = "0b10111110100000111010001010011100";
        ram[23] = "0b10111101101111101010101100110110";
        ram[24] = "0b00111110000010101010011001001100";
        ram[25] = "0b10111101010011100111000000111011";
        ram[26] = "0b00111101110001110100010100111001";
        ram[27] = "0b10111101011111000101000001001000";
        ram[28] = "0b10111111001111110111110011101110";
        ram[29] = "0b10111110011111110111110011101110";
        ram[30] = "0b10111101100111100001101100001001";
        ram[31] = "0b00111100100101010001100000101011";
        ram[32] = "0b00111110101001111110111110011110";
        ram[33] = "0b00111111000010011010000000100111";
        ram[34] = "0b00111110111000100010011010000001";
        ram[35] = "0b10111110010100000111110010000101";
        ram[36] = "0b00111101111011001000101101000100";
        ram[37] = "0b00111110000100001111111110010111";
        ram[38] = "0b10111101111011101100101111111011";
        ram[39] = "0b10111110001010101100110110011111";
        ram[40] = "0b00111110001111110100100010000000";
        ram[41] = "0b00111101100010110000111100101000";
        ram[42] = "0b00111101111110101010110011011010";
        ram[43] = "0b10111110001100001010001111010111";
        ram[44] = "0b00111111000100011101111001101010";
        ram[45] = "0b10111110001110011100000011101100";
        ram[46] = "0b00111110111100010101101101010111";
        ram[47] = "0b10111110000011101000101001110010";
        ram[48] = "0b00111101001101010000101100001111";
        ram[49] = "0b00111110001000100011001110011100";
        ram[50] = "0b00111101110011011001111010000100";
        ram[51] = "0b10111101110111011100110001100100";
        ram[52] = "0b00111101011110010000100101101100";
        ram[53] = "0b00111110010111101110110011000000";
        ram[54] = "0b00111100110001010110110101011101";
        ram[55] = "0b00111101100101100101001010111101";
        ram[56] = "0b00111110011100001010001111010111";
        ram[57] = "0b10111110010111110010000100101101";
        ram[58] = "0b10111110001111000001101111011010";
        ram[59] = "0b10111110010010101101101010111010";
        ram[60] = "0b00111101001100001111001001111100";
        ram[61] = "0b00111101101010110000001000001100";
        ram[62] = "0b00111101100001001110101001001011";
        ram[63] = "0b00111100011000000111010111110111";
        ram[64] = "0b10111111011010100110010011000011";
        ram[65] = "0b10111111100101011001111010000100";
        ram[66] = "0b00111100001111000110101001111111";
        ram[67] = "0b10111101101000001001000000101110";
        ram[68] = "0b10111101100010101010011001001100";
        ram[69] = "0b10111110100001001100001011111000";
        ram[70] = "0b10111101000100110000101111100001";
        ram[71] = "0b10111101011011011111101001000100";
        ram[72] = "0b10111110011010101011001101101000";
        ram[73] = "0b10111101010010110010100101011111";
        ram[74] = "0b10111110011111110111110011101110";
        ram[75] = "0b00111110011110011111010101011010";
        ram[76] = "0b00111101001011101110011000110010";
        ram[77] = "0b00111110010110100000001001110101";
        ram[78] = "0b00111101001110101100011100010001";
        ram[79] = "0b10111101110100011011011100010111";
        ram[80] = "0b00111101010001000011001011001010";
        ram[81] = "0b10111101011010110001110001000011";
        ram[82] = "0b10111110101001110010101100000010";
        ram[83] = "0b00111101010110010001011010000111";
        ram[84] = "0b00111101101011011010101110011111";
        ram[85] = "0b00111101101100000101010100110010";
        ram[86] = "0b10111101111011110000000001101001";
        ram[87] = "0b00111110001000010010110101110111";
        ram[88] = "0b10111101101001001010100011000001";
        ram[89] = "0b10111110011011100110001100100000";
        ram[90] = "0b10111110001000010111110000011100";
        ram[91] = "0b00111110001001001000111010001010";
        ram[92] = "0b10111110000001111111110010111001";
        ram[93] = "0b10111011111111111001011100100100";
        ram[94] = "0b10111101011110110001010110110101";
        ram[95] = "0b00111100101011100111110101010110";
        ram[96] = "0b10111110010000101100001111001010";
        ram[97] = "0b10111110101000100101101011101110";
        ram[98] = "0b00111110011010100111111011111010";
        ram[99] = "0b10111101111011001111010000011111";
        ram[100] = "0b00111100100010011010000000100111";
        ram[101] = "0b10111110111111100110100110101101";
        ram[102] = "0b10111110010111110010000100101101";
        ram[103] = "0b00111110100001100101100101001011";
        ram[104] = "0b10111110011000011011000010001010";
        ram[105] = "0b00111101101101011101110011000110";
        ram[106] = "0b00111101111111100101110010010010";
        ram[107] = "0b00111100011011110011010011010111";
        ram[108] = "0b00111111000011100111000000111011";
        ram[109] = "0b10111101011001111101010101100111";
        ram[110] = "0b00111110101011010100111111011111";
        ram[111] = "0b10111110101011100010111010110010";
        ram[112] = "0b10111101101110000001110101111110";
        ram[113] = "0b10111100110110111000101110101100";
        ram[114] = "0b00111110111100101110010010001111";
        ram[115] = "0b10111111000010111110000011011111";
        ram[116] = "0b00111101001011010100001011000100";
        ram[117] = "0b00111101101111101010101100110110";
        ram[118] = "0b10111110001110010101100000010000";
        ram[119] = "0b10111110011001010001000110011101";
        ram[120] = "0b00111100101000111101011100001010";
        ram[121] = "0b00111101100111011110011010011011";
        ram[122] = "0b10111110000101001010111101001111";
        ram[123] = "0b10111101000111001110000001110110";
        ram[124] = "0b00111111010011110101010110011011";
        ram[125] = "0b10111110101000100010011010000001";
        ram[126] = "0b00111110110100110010011000011000";
        ram[127] = "0b10111111000110000000100111010101";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(LoopOracle_C3W3) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 128;
static const unsigned AddressWidth = 7;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


LoopOracle_C3W3_ram* meminst;


SC_CTOR(LoopOracle_C3W3) {
meminst = new LoopOracle_C3W3_ram("LoopOracle_C3W3_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~LoopOracle_C3W3() {
    delete meminst;
}


};//endmodule
#endif
