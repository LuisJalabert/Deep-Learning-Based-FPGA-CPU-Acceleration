// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _generic_fmax_float_s_HH_
#define _generic_fmax_float_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct generic_fmax_float_s : public sc_module {
    // Port declarations 4
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > x;
    sc_in< sc_lv<32> > y;
    sc_out< sc_lv<32> > ap_return;


    // Module declarations
    generic_fmax_float_s(sc_module_name name);
    SC_HAS_PROCESS(generic_fmax_float_s);

    ~generic_fmax_float_s();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > t_V_1_fu_42_p1;
    sc_signal< sc_lv<32> > t_V_2_fu_68_p1;
    sc_signal< sc_lv<8> > tmp_V_fu_54_p4;
    sc_signal< sc_lv<23> > tmp_V_1_fu_64_p1;
    sc_signal< sc_lv<8> > tmp_V_2_fu_80_p4;
    sc_signal< sc_lv<23> > tmp_V_3_fu_90_p1;
    sc_signal< sc_lv<1> > tmp_3_fu_100_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_106_p2;
    sc_signal< sc_lv<1> > tmp_fu_94_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_112_p2;
    sc_signal< sc_lv<1> > tmp2_fu_124_p2;
    sc_signal< sc_lv<1> > tmp1_fu_118_p2;
    sc_signal< sc_lv<1> > tmp_i_fu_136_p2;
    sc_signal< sc_lv<1> > tmp_1_i_fu_142_p2;
    sc_signal< sc_lv<1> > tmp_i1_fu_154_p2;
    sc_signal< sc_lv<1> > tmp_1_i1_fu_160_p2;
    sc_signal< sc_lv<1> > p_Result_s_fu_46_p3;
    sc_signal< sc_lv<23> > p_Result_7_fu_172_p4;
    sc_signal< sc_lv<32> > p_Result_8_fu_182_p4;
    sc_signal< sc_lv<1> > ymaggreater_fu_196_p2;
    sc_signal< sc_lv<1> > ymaggreater_1_fu_202_p2;
    sc_signal< sc_lv<1> > p_Result_6_fu_72_p3;
    sc_signal< sc_lv<1> > p_s_fu_208_p3;
    sc_signal< sc_lv<1> > ymaggreater2_fu_216_p3;
    sc_signal< sc_lv<1> > or_cond2_fu_130_p2;
    sc_signal< sc_lv<1> > tmp_7_demorgan_fu_148_p2;
    sc_signal< sc_lv<1> > sel_tmp_fu_232_p2;
    sc_signal< sc_lv<1> > sel_tmp1_fu_238_p2;
    sc_signal< sc_lv<1> > tmp_9_demorgan_fu_166_p2;
    sc_signal< sc_lv<1> > sel_tmp2_fu_244_p2;
    sc_signal< sc_lv<32> > res_fu_192_p1;
    sc_signal< sc_lv<32> > res_1_fu_224_p3;
    sc_signal< sc_lv<1> > sel_tmp6_demorgan_fu_258_p2;
    sc_signal< sc_lv<1> > sel_tmp6_fu_264_p2;
    sc_signal< sc_lv<1> > sel_tmp7_fu_270_p2;
    sc_signal< sc_lv<32> > res_2_fu_250_p3;
    sc_signal< sc_lv<1> > sel_tmp11_demorgan_fu_284_p2;
    sc_signal< sc_lv<1> > sel_tmp3_fu_290_p2;
    sc_signal< sc_lv<1> > sel_tmp4_fu_296_p2;
    sc_signal< sc_lv<32> > res_4_fu_276_p3;
    sc_signal< sc_lv<32> > res_5_fu_302_p3;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_ap_ready();
    void thread_ap_return();
    void thread_or_cond2_fu_130_p2();
    void thread_p_Result_6_fu_72_p3();
    void thread_p_Result_7_fu_172_p4();
    void thread_p_Result_8_fu_182_p4();
    void thread_p_Result_s_fu_46_p3();
    void thread_p_s_fu_208_p3();
    void thread_res_1_fu_224_p3();
    void thread_res_2_fu_250_p3();
    void thread_res_4_fu_276_p3();
    void thread_res_5_fu_302_p3();
    void thread_res_fu_192_p1();
    void thread_sel_tmp11_demorgan_fu_284_p2();
    void thread_sel_tmp1_fu_238_p2();
    void thread_sel_tmp2_fu_244_p2();
    void thread_sel_tmp3_fu_290_p2();
    void thread_sel_tmp4_fu_296_p2();
    void thread_sel_tmp6_demorgan_fu_258_p2();
    void thread_sel_tmp6_fu_264_p2();
    void thread_sel_tmp7_fu_270_p2();
    void thread_sel_tmp_fu_232_p2();
    void thread_t_V_1_fu_42_p1();
    void thread_t_V_2_fu_68_p1();
    void thread_tmp1_fu_118_p2();
    void thread_tmp2_fu_124_p2();
    void thread_tmp_1_i1_fu_160_p2();
    void thread_tmp_1_i_fu_142_p2();
    void thread_tmp_3_fu_100_p2();
    void thread_tmp_4_fu_106_p2();
    void thread_tmp_5_fu_112_p2();
    void thread_tmp_7_demorgan_fu_148_p2();
    void thread_tmp_9_demorgan_fu_166_p2();
    void thread_tmp_V_1_fu_64_p1();
    void thread_tmp_V_2_fu_80_p4();
    void thread_tmp_V_3_fu_90_p1();
    void thread_tmp_V_fu_54_p4();
    void thread_tmp_fu_94_p2();
    void thread_tmp_i1_fu_154_p2();
    void thread_tmp_i_fu_136_p2();
    void thread_ymaggreater2_fu_216_p3();
    void thread_ymaggreater_1_fu_202_p2();
    void thread_ymaggreater_fu_196_p2();
};

}

using namespace ap_rtl;

#endif
